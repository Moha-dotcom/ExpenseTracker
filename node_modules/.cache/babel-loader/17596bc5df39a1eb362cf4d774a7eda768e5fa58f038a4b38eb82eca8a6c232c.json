{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedabdullahi/Desktop/ExpenseTracker/src/Components/Expense/ExpenseChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseChart(props) {\n  const chartDatapoint = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'April',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'July',\n    value: 0\n  }, {\n    label: 'August',\n    value: 0\n  }, {\n    label: 'Sept',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (let expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDatapoint[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDatapoint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Chart","ExpenseChart","props","chartDatapoint","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["/Users/mohamedabdullahi/Desktop/ExpenseTracker/src/Components/Expense/ExpenseChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\n\n\nfunction ExpenseChart(props) {\n    const chartDatapoint = [\n        {label : 'Jan', value : 0},\n        {label : 'Feb', value : 0},\n        {label : 'Mar', value : 0},\n        {label : 'April', value : 0},\n        {label : 'May', value : 0},\n        {label : 'Jun', value : 0},\n        {label : 'July', value : 0},\n        {label : 'August', value : 0},\n        {label : 'Sept', value : 0},\n        {label : 'Oct', value : 0},\n        {label : 'Nov', value : 0},\n        {label : 'Dec', value : 0},\n    ];\n\n\n    for(let expense of props.expenses){\n        const expenseMonth = expense.date.getMonth(); \n        chartDatapoint[expenseMonth].value += expense.amount\n\n    }\n    return  (\n\n        <Chart dataPoints = {chartDatapoint} />\n    )\n}\n\nexport default ExpenseChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC;AAGnC,SAASC,YAAY,CAACC,KAAK,EAAE;EACzB,MAAMC,cAAc,GAAG,CACnB;IAACC,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,OAAO;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC5B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,MAAM;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC3B;IAACD,KAAK,EAAG,QAAQ;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC7B;IAACD,KAAK,EAAG,MAAM;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC3B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAG,KAAK;IAAEC,KAAK,EAAG;EAAC,CAAC,CAC7B;EAGD,KAAI,IAAIC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAC;IAC9B,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE;IAC5CP,cAAc,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EAExD;EACA,oBAEI,QAAC,KAAK;IAAC,UAAU,EAAIR;EAAe;IAAA;IAAA;IAAA;EAAA,QAAG;AAE/C;AAAC,KA1BQF,YAAY;AA4BrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}